CREATE DATABASE calendario;
USE calendario;

-- Tabella utente
CREATE TABLE utente (
    username VARCHAR(50) PRIMARY KEY,
    password TEXT NOT NULL,
    amministratore BOOLEAN NOT NULL DEFAULT FALSE
);

-- Tabella etichette
CREATE TABLE etichette (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY, 
    titolo VARCHAR(255) NOT NULL,
    sottotitolo VARCHAR(255),
    colore VARCHAR(20),  -- Formato RGB, ad esempio 'rgb(255, 0, 0)'
    username VARCHAR(50), 
    FOREIGN KEY (username) REFERENCES utente(username)  ON DELETE CASCADE
);

CREATE TABLE etichetta_giorno (
    idEtichetta INT UNSIGNED,
    dataGiorno DATE,
    PRIMARY KEY (idEtichetta, dataGiorno),
    FOREIGN KEY (idEtichetta) REFERENCES etichette(id) ON DELETE CASCADE
);

-- Tabella evento
CREATE TABLE evento (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY, 
    titolo VARCHAR(100) NOT NULL,
    descrizione TEXT,
    colore VARCHAR(20),  -- Formato RGB, ad esempio 'rgb(255, 0, 0)'
    orarioInizio TIME NOT NULL,
    orarioFine TIME NOT NULL,
    dataInizio DATE NOT NULL DEFAULT (CURDATE()),
    dataFine DATE NOT NULL DEFAULT (CURDATE()),
    CHECK (orarioFine > orarioInizio)
);

CREATE TABLE utente_evento (
    username VARCHAR(50),
    evento_id INT UNSIGNED,
    PRIMARY KEY (username, evento_id),
    FOREIGN KEY (username) REFERENCES utente(username) ON DELETE CASCADE,
    FOREIGN KEY (evento_id) REFERENCES evento(id) ON DELETE CASCADE
);

-- Tabella toDoList
CREATE TABLE toDoList (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY, 
    titolo VARCHAR(100) NOT NULL,
    urgenza INT CHECK (urgenza BETWEEN 1 AND 10),
    giorno DATE NOT NULL DEFAULT (CURDATE()),
    username VARCHAR(50) NOT NULL,
    FOREIGN KEY (username) REFERENCES utente(username) ON DELETE CASCADE
);

-- Tabella attività
CREATE TABLE attività (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY, 
    titolo VARCHAR(100) NOT NULL,
    descrizione TEXT,
    completata BOOLEAN NOT NULL DEFAULT FALSE,
    idToDoList INT UNSIGNED NOT NULL,  
    FOREIGN KEY (idToDoList) REFERENCES toDoList(id) ON DELETE CASCADE
);

DELIMITER //
CREATE TRIGGER after_user_insert
AFTER INSERT ON utente
FOR EACH ROW
BEGIN
    INSERT INTO etichette (titolo, sottotitolo, colore, username)
    VALUES
        ('Lavoro', 'Attività professionale', 'rgb(0, 204, 255)', NEW.username),
        ('Malattia', 'Giorno in malattia', 'rgb(179, 208, 64)', NEW.username),
        ('Vacanza', 'Riposo personale', 'rgb(226, 24, 24)', NEW.username),
        ('Impegnata', 'Attività impegnative da svolgere', 'rgb(0, 145, 182)', NEW.username);
END //
DELIMITER ;

insert into calendario.utente(username, password, amministratore)
values ('adele', '$2y$10$7rvVIU.pxjksJMxJsQh3Fuvvav4B.PAezy1B7I5nnk85aHhEqsWuy', true);